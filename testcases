1 : dup2 dup ; 2  <- stack: 1 2; words: dup2
: drop dup ; <- should override drop
: 1 2 ;  1 . <- 2 ; words: should override 1 with 2
: 1 2 ; : 2 1 ; 1 2 . . <- 2 2 stack: 2 2; 
:noname 1 ; <- leaves an execution token
: n 1 ; : n n 2 ; : n n 3 ; n . . . <- 3 2 1
1 2 3 ' dup execute . . <- 3 3

#conditionals

3 4 < . <- -1
3 4 > . <- 0
3 4 < invert . <- 0
4 4 = . <- -1
3 4 < 20 30 > or . <- -1
3 4 < 20 30 < and . <- -1
-1 0 and . <- 0
-1 -1 and . <- -1
-1 -1 or . <- -1
0 0 or . <- 0
0 -1 or . <- 0
0 0 xor . <- 0
-1 -1 xor . <- 0
0 -1 xor . <- -1